import sqlite3 as sq
# SQLite #9: Методы commit и rollback

# Реализуем соединение с БД через блок обработки исключений try/except/finally

cars = [
    ('Audi', 52642),
    ('Mercedes', 57127),
    ('Skoda', 9000),
    ('Volvo', 29000),
    ('Bentley', 350000)
]

con = None
try:
    con = sq.connect("cars.db")
    cur = con.cursor()

#       execute - определенные sql запросы - создаем таблицу с именем cars и полями
    cur.executescript("""CREATE TABLE IF NOT EXISTS cars (
        car_id INTEGER PRIMARY KEY AUTOINCREMENT,
        model TEXT,
        price INTEGER
    );

        BEGIN;
        INSERT INTO cars VALUES(NULL,'Audi',52642);
        INSERT INTO cars VALUES(NULL,'Mercedes',57127);
        INSERT INTO cars VALUES(NULL,'Skoda',9000);
        INSERT INTO cars VALUES(NULL,'Volvo',29000);
        INSERT INTO cars VALUES(NULL,'Bentley',350000);
        UPDATE cars SET price = price+1000
    """)



# except - будет отлавливать специальное исключение sq.Error
# в консоль будет сообщение, если с БД произошла ошибка
    con.commit() # - сохраняет в БД все внесенные изменения
     
except sq.Error as e:
    if con: con.rollback()
    print("Ошибка выполнения запроса")
finally:
    if con: con.close() # Если была выполнена команда con = sq.connect("cars.db"),
                        # о соединение нужно закрыть.
                        # finally срабатывает в любом случае, даже если в блоке try произошли ошибки


# Преимущества:
# здесь сами «вручную» вызываем методы commit и close
# Если операции с таблицами прошли успешно, то они будут сохранены,
# если же возникли какие-либо ошибки (исключения), то будет вызван метод
# rollback, который откатывает состояние БД в состояние отметки BEGIN,
# то есть, все внесенные изменения применены не будут.



# Например c помощью метода executescript() выполним действия,
# мы работаем с БД cars и вносим в нее следующие строчки
# BEGIN - служит для того, чтоб мы откатились к этому состоянию БД, если ниже
# произошла какая-нибудь ошибка, если при выполнении SQL скриптов возникает ошибка,
# срабатывает метод rollback и мы возвращаемся в исходное состояние таблицы cars
# т.е. все изменения будут отменены, а если успешны, выполнится метод commit()
# и все изменения будут сохранены в БД

# Для примера удалим все строчки из таблицы 
# Предположим сделаем ошибку cars2 - таблица которой у нас нет
# Значит состояние БД у нас откатится в исходное, т.е. таблица как была пустой, так она ней и останется
# это благодаря тому, что мы не сохраняли наши изменения
# Если ошибок не будет cars - у нас появились наши записи.
# т.е. мы можем более тонко управлять БД















