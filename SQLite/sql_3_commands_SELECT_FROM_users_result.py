# SQLite #3: команды-запросы SELECT и INSERT при работе с таблицами БД
import sqlite3 as sq

# устанавливаем связь с файлом который находится в каталоге
with sq.connect("saper_3.db") as con:     # контекст менеджера автоматически закрывает базу данных
# con = sq.connect("saper.db")  # !!!!!!!Так открывать БД нельзя
    cur = con.cursor()  # Для взаимодействия с базой данных используем объект Cursor
                        # метод cursor() возвращает экземпляр класса cursor и через переменную cur
                        # осуществляем непосредственно работу

    
    # Все приведенные SQL-запросы можно выполнять непосредственно из программы:
    cur.execute("SELECT * FROM users WHERE score > 100 ORDER BY score DESC LIMIT 5")    # - удаляем таблицу из файла test.db

    # Вариант 1
#   result_1 = cur.fetchall()
#   print(result_1)

    # Вариант 2
#    for result_2 in cur:
#        print(result_2)
    
# Вариант 1
# Здесь используется метод fetchall для получения результатов отбора SQL-запроса. В результате, result будет ссылаться на упорядоченный список, состоящий из кортежей с данными таблицы:
# Появляется список из таблицы и мы можем брать данные для работы
# [(5, 'Serg', 1, 33, 2000), (1, 'Alex', 1, 19, 1000), (3, 'Nikolay', 1, 39, 900), (8, 'Yulia', 2, 23, 700), (7, 'Elena', 2, 17, 500)]

# Вариант 2 - в каждой строчке отображена соответствующая запись нашей выборки.
# (5, 'Serg', 1, 33, 2000)
# (1, 'Alex', 1, 19, 1000)
# (3, 'Nikolay', 1, 39, 900)
# (8, 'Yulia', 2, 23, 700)
# (7, 'Elena', 2, 17, 500)

# Вариант 2 - более предпочтителен когда число выбираемых записей может быть велико.
# Тогда мы не формируем список, а последовательно выбираем из БД и тут же их обрабатываем. Такой подход существенно экономит память.

# Два метода, которые выдают результат выборки из таблицы:
# fetchmany(size) – возвращает число записей не более size;
# fetchone() – возвращает первую запись.
    result_3 = cur.fetchone()
    result_4 = cur.fetchmany(2)
    print(result_3)
    print(result_4)
